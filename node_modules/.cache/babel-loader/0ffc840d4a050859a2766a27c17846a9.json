{"ast":null,"code":"var _jsxFileName = \"/home/root-pc/Desktop/INTERN/projects/proj1withreduxsaga/src/components/Ed.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Table, Input, InputNumber, Popconfirm, Form, Typography, Button } from \"antd\";\nimport { useHistory } from \"react-router\";\n// import Modal from \"antd/lib/modal/Modal\";\nimport { Modal } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUser } from \"../redux/ducks/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst originData = [];\n\nfor (let i = 0; i < 20; i++) {\n  originData.push({\n    key: i.toString(),\n    name: `Edrward ${i}`,\n    id: i,\n    email: `London Park no. ${i}`\n  });\n}\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === \"number\" ? /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 46\n  }, this) : /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 64\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: true,\n        message: `Please Input ${title}!`\n      }],\n      children: inputNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EditableCell;\n\nconst Ed = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [form] = Form.useForm();\n  const [data, setData] = useState(originData);\n  const [editingKey, setEditingKey] = useState(\"\");\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [t1, setT1] = useState({\n    key: \"121121212\",\n    id: 1000001,\n    name: \"1212121\",\n    email: \"asa@gmail.com\"\n  });\n  let history = useHistory();\n  const dispatch = useDispatch();\n\n  const isEditing = record => record.key === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue({\n      name: \"\",\n      id: \"\",\n      email: \"\",\n      ...record\n    });\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey(\"\");\n  };\n\n  const save = async key => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        setData(newData);\n        setEditingKey(\"\");\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey(\"\");\n      }\n    } catch (errInfo) {\n      console.log(\"Validate Failed:\", errInfo);\n    }\n  };\n\n  useEffect(_s(() => {\n    _s();\n\n    // console.log(\"Hello this is from console log use effect\");\n    // fetch(\"https://jsonplaceholder.typicode.com/users\")\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     console.log(\"response\", data);\n    //     // setData(data);\n    //     if (localStorage.getItem(\"tableData\") === null)\n    //       localStorage.setItem(\"tableData\", JSON.stringify(data));\n    //     // console.log(\"data\", data);\n    //     let tempData: any = localStorage.getItem(\"tableData\");\n    //     let jsonTempData = JSON.parse(tempData);\n    //     let finaData: any = [];\n    //     jsonTempData.map((ele: any) => {\n    //       let temp: any = {};\n    //       temp.key = ele.id;\n    //       temp.name = ele.name;\n    //       temp.id = ele.id;\n    //       temp.email = ele.email;\n    //       finaData.push(temp);\n    //     });\n    //     console.log(\"finalData\", finaData);\n    //     setData(finaData);\n    //   });\n    dispatch(getUser());\n    let data121212 = useSelector(state => state);\n    console.log(\"state data121212\", data121212);\n  }, \"/wzG4EZGIaTF3K2aoIYkUh4PRfA=\", false, function () {\n    return [useSelector];\n  }), []);\n\n  const handleAdd = () => {\n    // const newData: any = {\n    //   key: \"1\",\n    //   name: `Edward King `,\n    //   id: 32,\n    //   email: `London, Park Lane no. `,\n    // };\n    // this.setState({\n    //   dataSource: [...dataSource, newData],\n    //   count: count + 1,\n    // });\n    // setData([...data, newData]);\n    history.push(\"/addnew\");\n  };\n\n  const dataSource = [...data];\n\n  const handleDelete = key => {\n    console.log(\"datasource\", dataSource);\n    let anyData = dataSource.filter(item => item.key !== key);\n    console.log(\"anyData\", anyData);\n    setData(anyData);\n  };\n\n  let anyData2;\n\n  const showModal = key => {\n    anyData2 = dataSource.filter(item => item.key === key);\n    console.log(\"anyData2\", anyData2[0]);\n    setT1(dataSource.filter(item => item.key === key)[0]);\n    console.log(\"t1\", t1);\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const columns = [{\n    title: \"name\",\n    dataIndex: \"name\",\n    width: \"25%\",\n    editable: true\n  }, {\n    title: \"id\",\n    dataIndex: \"id\",\n    width: \"15%\",\n    editable: true,\n    sorter: {\n      compare: (a, b) => a.id - b.id,\n      multiple: 1\n    }\n  }, {\n    title: \"email\",\n    dataIndex: \"email\",\n    width: \"40%\",\n    editable: true,\n    sorter: (a, b) => a.email.localeCompare(b.email)\n  }, {\n    title: \"\",\n    dataIndex: \"operation\",\n    render: (_, record) => {\n      const editable = isEditing(record);\n      return editable ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"javascript:;\",\n          onClick: () => save(record.key),\n          style: {\n            marginRight: 8\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: cancel,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography.Link, {\n        disabled: editingKey !== \"\",\n        onClick: () => edit(record),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    title: \"\",\n    dataIndex: \"operation\",\n    render: (_, record) => data.length >= 1 ? /*#__PURE__*/_jsxDEV(Popconfirm, {\n      title: \"Sure to delete?\",\n      onConfirm: () => handleDelete(record.key),\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }, this) : null\n  }, {\n    title: \"\",\n    dataIndex: \"operation\",\n    render: (_, record) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => showModal(record.key),\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Basic Modal\",\n        visible: isModalVisible,\n        onOk: handleOk,\n        onCancel: handleCancel,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name is: \", t1.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email is: \", t1.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Id is: \", t1.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }];\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return { ...col,\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === \"id\" ? \"number\" : \"text\",\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-primary btn-raised\",\n      style: {\n        margin: \"50px\"\n      },\n      onClick: handleAdd,\n      children: \"Add new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      component: false,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        components: {\n          body: {\n            cell: EditableCell\n          }\n        },\n        style: {\n          width: \"100%\",\n          overflow: \"scroll\"\n        },\n        bordered: true,\n        dataSource: data,\n        rowKey: \"ffgf\",\n        columns: mergedColumns,\n        rowClassName: \"editable-row\",\n        pagination: {\n          onChange: cancel\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Ed, \"M4Uei2Me48yN/qQszLof+T7Y5Ho=\", false, function () {\n  return [Form.useForm, useHistory, useDispatch];\n});\n\n_c2 = Ed;\nexport default Ed;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableCell\");\n$RefreshReg$(_c2, \"Ed\");","map":{"version":3,"sources":["/home/root-pc/Desktop/INTERN/projects/proj1withreduxsaga/src/components/Ed.tsx"],"names":["React","useState","useEffect","Table","Input","InputNumber","Popconfirm","Form","Typography","Button","useHistory","Modal","useDispatch","useSelector","getUser","originData","i","push","key","toString","name","id","email","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","margin","required","message","Ed","form","useForm","data","setData","editingKey","setEditingKey","isModalVisible","setIsModalVisible","t1","setT1","history","dispatch","isEditing","edit","setFieldsValue","cancel","save","row","validateFields","newData","findIndex","item","splice","errInfo","console","log","data121212","state","handleAdd","dataSource","handleDelete","anyData","filter","anyData2","showModal","handleOk","handleCancel","columns","width","editable","sorter","compare","a","b","multiple","localeCompare","render","_","marginRight","length","mergedColumns","map","col","onCell","body","cell","overflow","onChange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Table,\n  Input,\n  InputNumber,\n  Popconfirm,\n  Form,\n  Typography,\n  Button,\n} from \"antd\";\nimport { useHistory } from \"react-router\";\nimport { toast } from \"react-toastify\";\n// import Modal from \"antd/lib/modal/Modal\";\nimport { Modal } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUser, setUser } from \"../redux/ducks/user\";\n\ninterface Item {\n  key: string;\n  name: string;\n  id: number;\n  email: string;\n}\n\nconst originData: Item[] = [];\nfor (let i = 0; i < 20; i++) {\n  originData.push({\n    key: i.toString(),\n    name: `Edrward ${i}`,\n    id: i,\n    email: `London Park no. ${i}`,\n  });\n}\n\ninterface EditableCellProps extends React.HTMLAttributes<HTMLElement> {\n  editing: boolean;\n  dataIndex: string;\n  title: any;\n  inputType: \"number\" | \"text\";\n  record: Item;\n  index: number;\n  children: React.ReactNode;\n}\n\nconst EditableCell: React.FC<EditableCellProps> = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\n\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{ margin: 0 }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  );\n};\n\nconst Ed = () => {\n  const [form] = Form.useForm();\n  const [data, setData] = useState(originData);\n  const [editingKey, setEditingKey] = useState(\"\");\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [t1, setT1] = useState({\n    key: \"121121212\",\n    id: 1000001,\n    name: \"1212121\",\n    email: \"asa@gmail.com\",\n  });\n  let history = useHistory();\n  const dispatch = useDispatch();\n\n  const isEditing = (record: Item) => record.key === editingKey;\n\n  const edit = (record: Partial<Item> & { key: React.Key }) => {\n    form.setFieldsValue({ name: \"\", id: \"\", email: \"\", ...record });\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey(\"\");\n  };\n\n  const save = async (key: React.Key) => {\n    try {\n      const row = (await form.validateFields()) as Item;\n\n      const newData = [...data];\n      const index = newData.findIndex((item) => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row,\n        });\n        setData(newData);\n        setEditingKey(\"\");\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey(\"\");\n      }\n    } catch (errInfo) {\n      console.log(\"Validate Failed:\", errInfo);\n    }\n  };\n  useEffect(() => {\n    // console.log(\"Hello this is from console log use effect\");\n    // fetch(\"https://jsonplaceholder.typicode.com/users\")\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     console.log(\"response\", data);\n    //     // setData(data);\n    //     if (localStorage.getItem(\"tableData\") === null)\n    //       localStorage.setItem(\"tableData\", JSON.stringify(data));\n    //     // console.log(\"data\", data);\n    //     let tempData: any = localStorage.getItem(\"tableData\");\n    //     let jsonTempData = JSON.parse(tempData);\n    //     let finaData: any = [];\n    //     jsonTempData.map((ele: any) => {\n    //       let temp: any = {};\n    //       temp.key = ele.id;\n    //       temp.name = ele.name;\n    //       temp.id = ele.id;\n    //       temp.email = ele.email;\n    //       finaData.push(temp);\n    //     });\n    //     console.log(\"finalData\", finaData);\n    //     setData(finaData);\n    //   });\n    dispatch(getUser());\n    let data121212 = useSelector((state) => state);\n    console.log(\"state data121212\", data121212);\n  }, []);\n\n  const handleAdd = () => {\n    // const newData: any = {\n    //   key: \"1\",\n    //   name: `Edward King `,\n    //   id: 32,\n    //   email: `London, Park Lane no. `,\n    // };\n    // this.setState({\n    //   dataSource: [...dataSource, newData],\n    //   count: count + 1,\n    // });\n    // setData([...data, newData]);\n    history.push(\"/addnew\");\n  };\n  const dataSource: any = [...data];\n  const handleDelete = (key: React.Key) => {\n    console.log(\"datasource\", dataSource);\n    let anyData: any = dataSource.filter((item: any) => item.key !== key);\n    console.log(\"anyData\", anyData);\n    setData(anyData);\n  };\n  let anyData2: any;\n  const showModal = (key: any) => {\n    anyData2 = dataSource.filter((item: any) => item.key === key);\n    console.log(\"anyData2\", anyData2[0]);\n    setT1(dataSource.filter((item: any) => item.key === key)[0]);\n    console.log(\"t1\", t1);\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n  const columns = [\n    {\n      title: \"name\",\n      dataIndex: \"name\",\n      width: \"25%\",\n      editable: true,\n    },\n    {\n      title: \"id\",\n      dataIndex: \"id\",\n      width: \"15%\",\n      editable: true,\n\n      sorter: {\n        compare: (a: any, b: any) => a.id - b.id,\n        multiple: 1,\n      },\n    },\n    {\n      title: \"email\",\n      dataIndex: \"email\",\n      width: \"40%\",\n      editable: true,\n      sorter: (a: any, b: any) => a.email.localeCompare(b.email),\n    },\n    {\n      title: \"\",\n      dataIndex: \"operation\",\n      render: (_: any, record: Item) => {\n        const editable = isEditing(record);\n        return editable ? (\n          <span>\n            <a\n              href=\"javascript:;\"\n              onClick={() => save(record.key)}\n              style={{ marginRight: 8 }}\n            >\n              Save\n            </a>\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n              <a>Cancel</a>\n            </Popconfirm>\n          </span>\n        ) : (\n          <Typography.Link\n            disabled={editingKey !== \"\"}\n            onClick={() => edit(record)}\n          >\n            Edit\n          </Typography.Link>\n        );\n      },\n    },\n\n    {\n      title: \"\",\n      dataIndex: \"operation\",\n      render: (_: any, record: { key: React.Key }) =>\n        data.length >= 1 ? (\n          <Popconfirm\n            title=\"Sure to delete?\"\n            onConfirm={() => handleDelete(record.key)}\n          >\n            <a>Delete</a>\n          </Popconfirm>\n        ) : null,\n    },\n    {\n      title: \"\",\n      dataIndex: \"operation\",\n      render: (_: any, record: { key: React.Key }) => (\n        <>\n          <Button type=\"primary\" onClick={() => showModal(record.key)}>\n            View\n          </Button>\n          <Modal\n            title=\"Basic Modal\"\n            visible={isModalVisible}\n            onOk={handleOk}\n            onCancel={handleCancel}\n          >\n            <p>Name is: {t1.name}</p>\n            <p>Email is: {t1.email}</p>\n            <p>Id is: {t1.id}</p>\n          </Modal>\n        </>\n      ),\n    },\n  ];\n\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n    return {\n      ...col,\n      onCell: (record: Item) => ({\n        record,\n        inputType: col.dataIndex === \"id\" ? \"number\" : \"text\",\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n      }),\n    };\n  });\n\n  return (\n    <>\n      <Button\n        className=\"btn btn-primary btn-raised\"\n        style={{ margin: \"50px\" }}\n        onClick={handleAdd}\n      >\n        Add new\n      </Button>\n\n      <Form form={form} component={false}>\n        <Table\n          components={{\n            body: {\n              cell: EditableCell,\n            },\n          }}\n          style={{ width: \"100%\", overflow: \"scroll\" }}\n          bordered={true}\n          dataSource={data}\n          rowKey={\"ffgf\"}\n          columns={mergedColumns}\n          rowClassName=\"editable-row\"\n          pagination={{\n            onChange: cancel,\n          }}\n        />\n      </Form>\n    </>\n  );\n};\n\nexport default Ed;\n"]},"metadata":{},"sourceType":"module"}